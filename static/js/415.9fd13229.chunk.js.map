{"version":3,"file":"static/js/415.9fd13229.chunk.js","mappings":"kTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,wCAA2CC,IADxC,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,mBACTM,EADS,oBACWL,EADX,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOlBG,EAAS,mCAAG,WAAMD,GAAN,uFACON,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACkBL,EADlB,oBADP,cACVE,EADU,yBAITA,EAASC,MAJA,2CAAH,sDAOTI,EAAgB,mCAAG,WAAMF,GAAN,uFACAN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACkBL,EADlB,2BADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBK,EAAgB,mCAAG,WAAMC,GAAN,uFACAV,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBS,EADtB,+CADA,cACjBP,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qD,0HCQtB,UApCiB,WACf,OAA4BO,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEWjB,EAAAA,EAAAA,MAFX,OAEZkB,EAFY,OAGlBP,EAAUO,EAAeC,SAHP,gDAKlBN,EAAS,KAAMO,SALG,yDAAH,qDAQnBH,GACD,GAAE,KAGD,iCACE,2CACCL,IAAS,yBAAMA,IACfF,IACC,wBACGA,EAAOW,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMZ,GAAhD,SAA4DQ,EAAMK,SAD3DL,EAAME,GAIlB,QAKV,C","sources":["fetch/FetchApi.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\nconst fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrandingMovies,\n  fetchMoviesDetails,\n  fetchCast,\n  fetchMovieReview,\n  fetchSearchMovie,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrandingMovies } from 'fetch/FetchApi';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState();\n  const [error, setError] = useState();\n  const location = useLocation()\n\n  useEffect(() => {\n    const onFetchMovies = async () => {\n      try {\n        const trandingMovies = await fetchTrandingMovies();\n        setMovies(trandingMovies.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    onFetchMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {error && <div>{error}</div>}\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location}}>{movie.title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["axios","API_KEY","fetchTrandingMovies","response","data","fetchMoviesDetails","moviesId","fetchCast","fetchMovieReview","fetchSearchMovie","query","useState","movies","setMovies","error","setError","location","useLocation","useEffect","onFetchMovies","trandingMovies","results","message","map","movie","to","id","state","from","title"],"sourceRoot":""}