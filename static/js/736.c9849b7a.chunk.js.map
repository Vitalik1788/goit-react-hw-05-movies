{"version":3,"file":"static/js/736.c9849b7a.chunk.js","mappings":"oRAGaA,EAAgBC,EAAAA,EAAAA,IAAH,0GAQbC,EAAWD,EAAAA,EAAAA,IAAH,kE,SC2CrB,EAjDa,WACX,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAiB,OAAbF,EAAJ,CAIA,IAAMG,EAAQ,mCAAG,8GAEMC,EAAAA,EAAAA,GAAUJ,GAFhB,OAEPK,EAFO,OAGbR,EAASQ,EAAKC,MAHD,gDAKbP,EAAS,EAAD,IALK,yDAAH,qDAQdI,GAVC,CAWF,GAAE,CAACH,KAGF,gCACGF,IAAS,yBAAMA,IACfF,IACC,SAACJ,EAAD,UACGI,EAAMW,KAAI,SAAAD,GACT,OACEA,EAAKE,cACiB,OAAtBF,EAAKE,eACH,UAACd,EAAD,YACE,gBACEe,IAAG,yCAAoCH,EAAKE,cAC5CE,IAAG,UAAKJ,EAAKK,MACbC,MAAO,IACPC,QAAQ,UAEV,uBAAIP,EAAKK,QACT,uCAAeL,EAAKQ,eARPR,EAAKS,QAYzB,QAKV,C,kMClDDC,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,wCAA2CC,IADjC,cAC3BE,EAD2B,yBAE1BA,EAASd,MAFiB,2CAAH,qDAKnBe,EAAkB,mCAAG,WAAMpB,GAAN,uFACTgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,oBACWiB,EADX,oBADS,cAC1BE,EAD0B,yBAIzBA,EAASd,MAJgB,2CAAH,sDAOlBD,EAAS,mCAAG,WAAMJ,GAAN,uFACAgB,EAAAA,EAAAA,IAAA,kBACVhB,EADU,4BACkBiB,EADlB,oBADA,cACjBE,EADiB,yBAIhBA,EAASd,MAJO,2CAAH,sDAOTgB,EAAgB,mCAAG,WAAMrB,GAAN,uFACPgB,EAAAA,EAAAA,IAAA,kBACVhB,EADU,4BACkBiB,EADlB,2BADO,cACxBE,EADwB,yBAIvBA,EAASd,MAJc,2CAAH,sDAOhBiB,EAAgB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBM,EADtB,+CADO,cACxBJ,EADwB,yBAIvBA,EAASd,MAJc,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","fetch/FetchApi.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n\n`\n\nexport const CastCard = styled.div`\n  text-align: center;\n  width: 200px;\n\n`","import { fetchCast } from 'fetch/FetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastContainer, CastCard } from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState(null);\n  const [error, setError] = useState('');\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (moviesId === null) {\n      return;\n    }\n\n    const getCasts = async () => {\n      try {\n        const data = await fetchCast(moviesId);\n        setCasts(data.cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getCasts();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {casts && (\n        <CastContainer>\n          {casts.map(cast => {\n            return (\n              cast.profile_path &&\n              cast.profile_path !== null && (\n                <CastCard key={cast.cast_id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                    alt={`${cast.name}`}\n                    width={200}\n                    loading=\"lazy\"\n                  />\n                  <p>{cast.name}</p>\n                  <p>Character: {cast.character}</p>\n                </CastCard>\n              )\n            );\n          })}\n        </CastContainer>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\nexport const fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n}\n"],"names":["CastContainer","styled","CastCard","useState","casts","setCasts","error","setError","moviesId","useParams","useEffect","getCasts","fetchCast","data","cast","map","profile_path","src","alt","name","width","loading","character","cast_id","axios","API_KEY","fetchTrandingMovies","response","fetchMoviesDetails","fetchMovieReview","fetchSearchMovie","query"],"sourceRoot":""}