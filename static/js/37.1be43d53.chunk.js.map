{"version":3,"file":"static/js/37.1be43d53.chunk.js","mappings":"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","sources":["fetch/FetchApi.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\nconst fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrandingMovies,\n  fetchMoviesDetails,\n  fetchCast,\n  fetchMovieReview,\n  fetchSearchMovie,\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const CardContainer = styled.div`\n  display: flex;\n`\n\nexport const CardText = styled.div`\n  margin-left: 20px;\n  \n`\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  padding: 0;\n\n`","import { CardContainer, CardText, GenresList } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ moviesCard }) => {\n  const { release_date, poster_path, title, overview, genres, vote_average } =\n    moviesCard;\n  const year = new Date(release_date);\n  let releaseDate = year.getFullYear();\n  let moviesRating = Math.round(Number(`${vote_average}`) * 10);\n\n  return (\n    <>\n      <CardContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={`${title}`}\n          width={400}\n        />\n        <CardText>\n          <h1>\n            {title} ({releaseDate})\n          </h1>\n          <p>User Score: {moviesRating}% </p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <GenresList>\n            {genres.map(genres => {\n              return <li key={genres.id}>{genres.name}</li>;\n            })}\n          </GenresList>\n        </CardText>\n      </CardContainer>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  moviesCard: PropTypes.shape({\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import { useEffect, useState, Suspense, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'fetch/FetchApi';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Spiner from 'components/Spiner/Spiner';\n\nconst MoviesDetails = () => {\n  const [moviesCard, setMoviesCard] = useState(null);\n  const [error, setError] = useState('');\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n  \n  useEffect(() => {\n    const moviesDetails = async () => {\n      try {        \n        const data = await fetchMoviesDetails(moviesId);\n        setMoviesCard(data);        \n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    moviesDetails();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {\n        <Link to={backLinkLocation.current}>\n          <button type=\"button\" style={{ marginBottom: '20px' }}>\n            <BiArrowBack />\n            Go back\n          </button>\n        </Link>\n      }\n      {moviesCard && <MovieCard moviesCard={moviesCard} />}\n      {!error && (\n        <>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </>\n      )}\n      <Suspense fallback={<Spiner />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrandingMovies","response","data","fetchMoviesDetails","moviesId","fetchCast","fetchMovieReview","fetchSearchMovie","query","CardContainer","styled","CardText","GenresList","moviesCard","release_date","poster_path","title","overview","genres","vote_average","releaseDate","Date","getFullYear","moviesRating","Math","round","Number","src","alt","width","map","name","id","useState","setMoviesCard","error","setError","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","moviesDetails","message","to","current","type","style","marginBottom","Suspense","fallback","Spiner"],"sourceRoot":""}