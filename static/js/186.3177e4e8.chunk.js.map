{"version":3,"file":"static/js/186.3177e4e8.chunk.js","mappings":"+NA2CA,UAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAiB,OAAbF,EAAJ,CAGA,IAAMG,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAiBJ,GAFrB,OAETK,EAFS,OAGfR,EAAWQ,EAAKC,SAChBC,QAAQC,IAAIH,EAAKC,SAJF,gDAMfP,EAAS,KAAMU,SANA,yDAAH,qDAShBN,GAVC,CAWF,GAAE,CAACH,KAGF,gCACGF,IAAS,yBAAMA,IACfF,GACCA,EAAQc,KAAI,SAAAC,GACV,OACE,4BACE,qCAAaA,EAAOC,OAApB,QACA,uBAAID,EAAOE,YAFHF,EAAOG,GAKpB,IACiB,IAAnBlB,EAAQmB,SAAgB,6DAG9B,C,kMCvCDC,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,wCAA2CC,IADjC,cAC3BE,EAD2B,yBAE1BA,EAASd,MAFiB,2CAAH,qDAKnBe,EAAkB,mCAAG,WAAMpB,GAAN,uFACTgB,EAAAA,EAAAA,IAAA,mBACThB,EADS,oBACWiB,EADX,oBADS,cAC1BE,EAD0B,yBAIzBA,EAASd,MAJgB,2CAAH,sDAOlBgB,EAAS,mCAAG,WAAMrB,GAAN,uFACAgB,EAAAA,EAAAA,IAAA,kBACVhB,EADU,4BACkBiB,EADlB,oBADA,cACjBE,EADiB,yBAIhBA,EAASd,MAJO,2CAAH,sDAOTD,EAAgB,mCAAG,WAAMJ,GAAN,uFACPgB,EAAAA,EAAAA,IAAA,kBACVhB,EADU,4BACkBiB,EADlB,2BADO,cACxBE,EADwB,yBAIvBA,EAASd,MAJc,2CAAH,sDAOhBiB,EAAgB,mCAAG,WAAMC,GAAN,uFACPP,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBM,EADtB,+CADO,cACxBJ,EADwB,yBAIvBA,EAASd,MAJc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","fetch/FetchApi.jsx"],"sourcesContent":["import { fetchMovieReview } from 'fetch/FetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState();\n\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (moviesId === null) {\n      return;\n    }\n    const getReviews = async () => {\n      try {\n        const data = await fetchMovieReview(moviesId);\n        setReviews(data.results);\n        console.log(data.results);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getReviews();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {reviews &&\n        reviews.map(review => {\n          return (\n            <div key={review.id}>\n              <h4>Author: {review.author}.</h4>\n              <p>{review.content}</p>\n            </div>\n          );\n        })}\n      {reviews.length === 0 && <h3>No yet reviews about this film</h3>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = '41b8f9437bf3f899281f8a3f9bdc0891';\n\nexport const fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n}\n"],"names":["useState","reviews","setReviews","error","setError","moviesId","useParams","useEffect","getReviews","fetchMovieReview","data","results","console","log","message","map","review","author","content","id","length","axios","API_KEY","fetchTrandingMovies","response","fetchMoviesDetails","fetchCast","fetchSearchMovie","query"],"sourceRoot":""}